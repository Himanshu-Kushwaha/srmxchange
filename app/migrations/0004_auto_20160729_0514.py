# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-07-29 05:14
from __future__ import unicode_literals

import app.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0003_user_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('status', models.BooleanField(default=True)),
                ('num_votes', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created', 'num_votes'),
            },
        ),
        migrations.CreateModel(
            name='Available',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('text', models.TextField()),
                ('status', models.BooleanField(default=True)),
                ('num_views', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created', 'num_views'),
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('status', models.BooleanField(default=True)),
                ('num_votes', models.IntegerField(default=0)),
                ('num_views', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created', 'num_votes', 'num_views'),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('register_no', models.CharField(max_length=20, null=True, unique=True)),
                ('department', models.CharField(choices=[('CSE', 'CSE'), ('IT', 'IT'), ('ECE', 'ECE'), ('ITC', 'ITC'), ('Mech', 'Mech')], max_length=5, null=True)),
                ('year', models.IntegerField(choices=[('I', 1), ('II', 2), ('III', 3), ('IV', 4), ('V', 5)], null=True)),
                ('campus', models.CharField(choices=[('KTR', 'Kattankulathur'), ('VDP', 'Vadapalani'), ('RMP', 'Ramapuram'), ('NCR', 'NCR'), ('SKM', 'Sikkim')], max_length=3, null=True)),
                ('oneliner', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wanted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('text', models.TextField()),
                ('status', models.BooleanField(default=True)),
                ('num_views', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created', 'num_views'),
            },
        ),
        migrations.AlterModelOptions(
            name='question',
            options={'ordering': ('created', 'num_answers', 'num_views', 'num_votes')},
        ),
        migrations.RemoveField(
            model_name='question',
            name='asked_date',
        ),
        migrations.RemoveField(
            model_name='question',
            name='asker',
        ),
        migrations.AddField(
            model_name='question',
            name='author',
            field=models.ForeignKey(default=1, on_delete=models.SET(app.models.get_sentinel_user), to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='question',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2016, 7, 29, 5, 14, 41, 377383, tzinfo=utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='question',
            name='edited',
            field=models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 7, 29, 5, 14, 47, 257955, tzinfo=utc)),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='question',
            name='num_answers',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='question',
            name='num_views',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='question',
            name='num_votes',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='question',
            name='status',
            field=models.BooleanField(default=True),
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.AddField(
            model_name='wanted',
            name='author',
            field=models.ForeignKey(on_delete=models.SET(app.models.get_sentinel_user), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='story',
            name='author',
            field=models.ForeignKey(on_delete=models.SET(app.models.get_sentinel_user), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='available',
            name='author',
            field=models.ForeignKey(on_delete=models.SET(app.models.get_sentinel_user), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='author',
            field=models.ForeignKey(on_delete=models.SET(app.models.get_sentinel_user), to=settings.AUTH_USER_MODEL),
        ),
    ]
