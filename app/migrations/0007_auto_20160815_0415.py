# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-15 04:15
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0006_auto_20160815_0401'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment_Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('text', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments_created_on_answers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment_Available',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('text', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments_created_on_availables', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment_Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('text', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments_created_on_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment_Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('text', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments_created_on_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment_Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('text', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments_created_on_stories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment_Wanted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('text', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments_created_on_wanteds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='comment',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='for_item',
        ),
        migrations.RemoveField(
            model_name='answer',
            name='question',
        ),
        migrations.AlterField(
            model_name='available',
            name='tags',
            field=models.ManyToManyField(to='app.Tag'),
        ),
        migrations.AlterField(
            model_name='available',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='event',
            name='tags',
            field=models.ManyToManyField(to='app.Tag'),
        ),
        migrations.AlterField(
            model_name='event',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(to='app.Tag'),
        ),
        migrations.AlterField(
            model_name='project',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(to='app.Tag'),
        ),
        migrations.AlterField(
            model_name='question',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='story',
            name='tags',
            field=models.ManyToManyField(to='app.Tag'),
        ),
        migrations.AlterField(
            model_name='story',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='wanted',
            name='tags',
            field=models.ManyToManyField(to='app.Tag'),
        ),
        migrations.AlterField(
            model_name='wanted',
            name='text',
            field=models.TextField(),
        ),
        migrations.DeleteModel(
            name='Comment',
        ),
        migrations.DeleteModel(
            name='Commentable',
        ),
        migrations.AddField(
            model_name='comment_wanted',
            name='for_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='app.Wanted'),
        ),
        migrations.AddField(
            model_name='comment_story',
            name='for_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='app.Story'),
        ),
        migrations.AddField(
            model_name='comment_question',
            name='for_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='app.Question'),
        ),
        migrations.AddField(
            model_name='comment_event',
            name='for_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='app.Event'),
        ),
        migrations.AddField(
            model_name='comment_available',
            name='for_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='app.Available'),
        ),
        migrations.AddField(
            model_name='comment_answer',
            name='for_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='app.Answer'),
        ),
    ]
